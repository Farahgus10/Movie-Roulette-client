[{"C:\\Users\\farah\\Documents\\Visual_Studio_projects\\Movie Roulette\\movie-roulette-app\\src\\index.js":"1","C:\\Users\\farah\\Documents\\Visual_Studio_projects\\Movie Roulette\\movie-roulette-app\\src\\App.js":"2","C:\\Users\\farah\\Documents\\Visual_Studio_projects\\Movie Roulette\\movie-roulette-app\\src\\Components\\MovieRoulette-Component\\movieRoulette.js":"3","C:\\Users\\farah\\Documents\\Visual_Studio_projects\\Movie Roulette\\movie-roulette-app\\src\\Components\\Signup-Component\\signupForm.js":"4","C:\\Users\\farah\\Documents\\Visual_Studio_projects\\Movie Roulette\\movie-roulette-app\\src\\Services\\Movie-Service.js":"5","C:\\Users\\farah\\Documents\\Visual_Studio_projects\\Movie Roulette\\movie-roulette-app\\src\\Components\\ProfileComponent\\movieProfile.js":"6","C:\\Users\\farah\\Documents\\Visual_Studio_projects\\Movie Roulette\\movie-roulette-app\\src\\Components\\ProfileComponent\\yourMovies.js":"7","C:\\Users\\farah\\Documents\\Visual_Studio_projects\\Movie Roulette\\movie-roulette-app\\src\\Components\\Login-Component\\loginForm.js":"8","C:\\Users\\farah\\Documents\\Visual_Studio_projects\\Movie Roulette\\movie-roulette-app\\src\\Components\\MovieQuiz-Component\\moviePreference.js":"9","C:\\Users\\farah\\Documents\\Visual_Studio_projects\\Movie Roulette\\movie-roulette-app\\src\\Components\\FooterComponent\\footer.js":"10","C:\\Users\\farah\\Documents\\Visual_Studio_projects\\Movie Roulette\\movie-roulette-app\\src\\Components\\ProfileComponent\\movieProfileNav.js":"11","C:\\Users\\farah\\Documents\\Visual_Studio_projects\\Movie Roulette\\movie-roulette-app\\src\\Components\\Login-Component\\logo.js":"12","C:\\Users\\farah\\Documents\\Visual_Studio_projects\\Movie Roulette\\movie-roulette-app\\src\\Services\\Auth-api-service.js":"13","C:\\Users\\farah\\Documents\\Visual_Studio_projects\\Movie Roulette\\movie-roulette-app\\src\\Routes\\RegistrationRoute\\registration.js":"14","C:\\Users\\farah\\Documents\\Visual_Studio_projects\\Movie Roulette\\movie-roulette-app\\src\\Contexts\\UserContext.js":"15","C:\\Users\\farah\\Documents\\Visual_Studio_projects\\Movie Roulette\\movie-roulette-app\\src\\Services\\Token-service.js":"16","C:\\Users\\farah\\Documents\\Visual_Studio_projects\\Movie Roulette\\movie-roulette-app\\src\\config.js":"17","C:\\Users\\farah\\Documents\\Visual_Studio_projects\\Movie Roulette\\movie-roulette-app\\src\\Routes\\PrivateRoute\\Private-route.js":"18","C:\\Users\\farah\\Documents\\Visual_Studio_projects\\Movie Roulette\\movie-roulette-app\\src\\Services\\Profile-Service.js":"19","C:\\Users\\farah\\Documents\\Visual_Studio_projects\\Movie Roulette\\movie-roulette-app\\src\\Components\\MovieSurvey-Component\\movieSurvey.js":"20","C:\\Users\\farah\\Documents\\Visual_Studio_projects\\Movie Roulette\\movie-roulette-app\\src\\Routes\\MovieSurveyRoute\\movieSurveyRoute.js":"21","C:\\Users\\farah\\Documents\\Visual_Studio_projects\\Movie Roulette\\movie-roulette-app\\src\\Routes\\PublicRoute\\LandingPageRoute\\landingPageRoute.js":"22","C:\\Users\\farah\\Documents\\Visual_Studio_projects\\Movie Roulette\\movie-roulette-app\\src\\Routes\\PublicRoute\\LoginRoute\\loginRoute.js":"23","C:\\Users\\farah\\Documents\\Visual_Studio_projects\\Movie Roulette\\movie-roulette-app\\src\\Components\\ProfileComponent\\watchAgain.js":"24","C:\\Users\\farah\\Documents\\Visual_Studio_projects\\Movie Roulette\\movie-roulette-app\\src\\Components\\LogoutComponent\\LogoutComponent.js":"25"},{"size":369,"mtime":1622646561393,"results":"26","hashOfConfig":"27"},{"size":2086,"mtime":1625849995102,"results":"28","hashOfConfig":"27"},{"size":6740,"mtime":1623186660902,"results":"29","hashOfConfig":"27"},{"size":2020,"mtime":1624296890427,"results":"30","hashOfConfig":"27"},{"size":2173,"mtime":1624296116449,"results":"31","hashOfConfig":"27"},{"size":2090,"mtime":1624295606242,"results":"32","hashOfConfig":"27"},{"size":2572,"mtime":1625593673490,"results":"33","hashOfConfig":"27"},{"size":2126,"mtime":1624296970650,"results":"34","hashOfConfig":"27"},{"size":767,"mtime":1607530766520,"results":"35","hashOfConfig":"27"},{"size":833,"mtime":1625849919394,"results":"36","hashOfConfig":"27"},{"size":1255,"mtime":1620673395826,"results":"37","hashOfConfig":"27"},{"size":173,"mtime":1607528140228,"results":"38","hashOfConfig":"27"},{"size":934,"mtime":1619118517719,"results":"39","hashOfConfig":"27"},{"size":633,"mtime":1624296843490,"results":"40","hashOfConfig":"27"},{"size":237,"mtime":1612117716215,"results":"41","hashOfConfig":"27"},{"size":797,"mtime":1617202157778,"results":"42","hashOfConfig":"27"},{"size":111,"mtime":1622054487117,"results":"43","hashOfConfig":"27"},{"size":626,"mtime":1612228387600,"results":"44","hashOfConfig":"27"},{"size":1477,"mtime":1617201507440,"results":"45","hashOfConfig":"27"},{"size":4024,"mtime":1623351984152,"results":"46","hashOfConfig":"27"},{"size":695,"mtime":1625692315847,"results":"47","hashOfConfig":"27"},{"size":677,"mtime":1620834770241,"results":"48","hashOfConfig":"27"},{"size":703,"mtime":1620835333012,"results":"49","hashOfConfig":"27"},{"size":1603,"mtime":1625594056277,"results":"50","hashOfConfig":"27"},{"size":593,"mtime":1625692317748,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"55"},"hbdigj",{"filePath":"56","messages":"57","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"55"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"55"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"55"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"55"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"55"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"55"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"55"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"55"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"55"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"55"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"55"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},"C:\\Users\\farah\\Documents\\Visual_Studio_projects\\Movie Roulette\\movie-roulette-app\\src\\index.js",["116"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport UserContext from './Contexts/UserContext'\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    {/* <UserContext> */}\n      <App />\n    {/* </UserContext> */}\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n\n",["117","118"],"C:\\Users\\farah\\Documents\\Visual_Studio_projects\\Movie Roulette\\movie-roulette-app\\src\\App.js",["119","120","121","122","123","124"],"import React, {Component} from 'react';\nimport { Route, Switch, withRouter } from 'react-router-dom';\nimport Logout from './Components/LogoutComponent/LogoutComponent'\nimport RegistrationRoute from './Routes/RegistrationRoute/registration'\nimport LoginRoute from './Routes/PublicRoute/LoginRoute/loginRoute'\nimport MoviePreference from './Components/MovieQuiz-Component/moviePreference'\nimport MovieRoulette from './Components/MovieRoulette-Component/movieRoulette'\nimport YourMovies from './Components/ProfileComponent/yourMovies'\nimport MovieProfile from './Components/ProfileComponent/movieProfile'\nimport MovieSurveyRoute from './Routes/MovieSurveyRoute/movieSurveyRoute'\nimport ProfileService from './Services/Profile-Service'\nimport Footer from './Components/FooterComponent/footer'\nimport MovieService from './Services/Movie-Service'\nimport PrivateRoute from './Routes/PrivateRoute/Private-route'\nimport LandingPageRoute from './Routes/PublicRoute/LandingPageRoute/landingPageRoute'\nimport WatchAgain from './Components/ProfileComponent/watchAgain'\nimport './App.css'\n\nclass App extends React.Component {\nstate = {\n \n}\n\nrender() {\n  let loginComponent;\n  if(this.props != {}) {\n    loginComponent = <Route exact path='/' component={LoginRoute} />\n  }\n  \n  return (\n    <main className='App'>\n      <Switch>\n        <Route exact path='/' component={LandingPageRoute}/>\n        <Route exact path='/login' component={LoginRoute} />\n        <Route path='/signup' component={RegistrationRoute} />\n        <Route path='/genre-select' component={MoviePreference} />\n\n        <PrivateRoute path={'/movie-roulette'} component={MovieRoulette}/>\n        <PrivateRoute path={'/your-movies'} component={YourMovies} />\n        <PrivateRoute path={'/movie-profile'} component={MovieProfile} />\n        <PrivateRoute path={'/watch-again'} component={WatchAgain}/>\n        <PrivateRoute path={'/movie-survey'} component={MovieSurveyRoute} />\n      </Switch>\n      {/* <Logout /> */}\n      <Footer path={this.props.location.pathname}/>\n      \n    </main>\n  );\n}\n}\n\nexport default withRouter(App);\n","C:\\Users\\farah\\Documents\\Visual_Studio_projects\\Movie Roulette\\movie-roulette-app\\src\\Components\\MovieRoulette-Component\\movieRoulette.js",["125","126","127","128","129"],"import React from 'react';\r\nimport MovieService from '../../Services/Movie-Service'\r\nimport ProfileService from '../../Services/Profile-Service'\r\n// import { faThumbsUp } from \"@fortawesome/free-solid-svg-icons\";\r\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport ThumbsUp from '../../Images/LogoMakr-9y4t1T.png'\r\nimport {AiOutlineLike} from 'react-icons/ai'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faHeart as farHeart } from '@fortawesome/free-regular-svg-icons'\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\r\nimport './movieRoulette.css'\r\n\r\nclass MovieRoulette extends React.Component {\r\nstate = {\r\n    currentMovieIndex: 0,\r\n    currentMovieDisliked: true,\r\n    filteredMovieList: [],\r\n    currentProfileInfo: [],\r\n    currentPage: Math.floor(Math.random() * 500),\r\n}\r\n\r\ncomponentDidMount() {\r\n    this.loadMovies();\r\n}\r\n\r\nloadMovies = () => {\r\n    Promise.all([\r\n        MovieService.getMyMovies(),\r\n        MovieService.getAllMovies(this.state.currentPage),\r\n        ProfileService.getCurrentUserProfile()\r\n    ]).then(([arr1, arr2, profile]) => {\r\n        if(profile.length == 0) {\r\n            const newUserProfileInfo = {\r\n                'profile_picture': 'profile pic here',\r\n                'genre_like': 'none',\r\n                'actor': 'none'\r\n            }\r\n            ProfileService.insertUserProfile(newUserProfileInfo)\r\n        }\r\n            this.setState({\r\n                currentProfileInfo: profile\r\n            })\r\n\r\n        // Variables \r\n        let myGenres; \r\n        let myMovieIds = [];\r\n        let filteredMovies;\r\n\r\n        // Get the movie id's of movies that the user has already rated \r\n        arr1.map(movie => {\r\n            myMovieIds.push(movie.id);\r\n        })\r\n\r\n        // Get the user's preferred genres, if they have any\r\n        if(profile.map(genre => genre.genre_like)[0] === \"none\") {\r\n            myGenres = [];\r\n        } else {\r\n            myGenres = profile.map(genre => JSON.parse(genre.genre_like)).map(info => info.map(val => val.value))[0]\r\n        }\r\n\r\n        // Filter out movies the user has already rated. If they have preferred genres, filter out non-relevent genres. If not, show all movies\r\n        if(myGenres.length === 0) {\r\n            filteredMovies = arr2.results.filter(val => !myMovieIds.includes(val.id))\r\n        } else {\r\n            filteredMovies = arr2.results.filter(val => !myMovieIds.includes(val.id)).filter(val => val.genre_ids.includes(parseInt(myGenres)))\r\n        }\r\n\r\n        // filteredMovies might be empty if a new list is loaded with no genres that the user likes. If this happens, load more\r\n        if(filteredMovies.length === 0) {\r\n            this.loadMovies();\r\n        }\r\n        \r\n        this.setState({\r\n            filteredMovieList: filteredMovies,\r\n        });\r\n    })\r\n}\r\n\r\naddToYourMovies = (disliked) => {\r\n    // id, title, overview, genre_id, release_date\r\n    const currentMovie = this.state.filteredMovieList[this.state.currentMovieIndex];\r\n    const movieID = currentMovie.id;\r\n    const movieTitle = currentMovie.original_title;\r\n    const moviePoster = currentMovie.poster_path;\r\n    const movieOverview = currentMovie.overview;\r\n    const genreID = [...currentMovie.genre_ids].join(', ');\r\n    const releaseDate = currentMovie.release_date;\r\n    const user_id = this.state.currentProfileInfo.map(info => info.user_id).toString();\r\n\r\n    MovieService.postMovie({\r\n        id: movieID,\r\n        title: movieTitle,\r\n        poster: moviePoster,\r\n        overview: movieOverview,\r\n        genre_id: genreID,\r\n        release_date: releaseDate,\r\n        disliked: disliked,\r\n        watched: false,\r\n        user_id: user_id,\r\n    })\r\n}\r\n\r\nthumbsDown = () => {\r\n    this.setState({\r\n        currentMovieDisliked: true\r\n    }, () => {\r\n        this.addToYourMovies(this.state.currentMovieDisliked)\r\n        if(this.state.currentMovieIndex > -1) {\r\n        this.state.filteredMovieList.splice(this.state.currentMovieIndex, 1);\r\n    }\r\n        this.setState({\r\n            currentMovieIndex: this.state.currentMovieIndex\r\n        })\r\n\r\n        // once end of first list is reached, go to next page and load more movies\r\n        if(this.state.filteredMovieList.length < 1) {\r\n            this.setState({\r\n                currentPage: this.state.currentPage + 1,\r\n            })\r\n            this.loadMovies();\r\n        }     \r\n    })\r\n\r\n    \r\n}\r\n\r\nthumbsUp = () => {\r\n    this.setState({\r\n        currentMovieDisliked: false\r\n    }, () => {\r\n        this.addToYourMovies(this.state.currentMovieDisliked)\r\n        if(this.state.currentMovieIndex > -1) {\r\n            this.state.filteredMovieList.splice(this.state.currentMovieIndex, 1);\r\n        }\r\n        this.setState({\r\n            currentMovieIndex: this.state.currentMovieIndex\r\n        })\r\n\r\n        // once end of first list is reached, go to next page and load more movies\r\n        if(this.state.filteredMovieList.length < 1) {\r\n            this.setState({\r\n                currentPage: this.state.currentPage + 1,\r\n            })\r\n            this.loadMovies();\r\n        }      \r\n    })\r\n}\r\n\r\nrender() {\r\n    let currentMovieTitle = (!this.state.filteredMovieList[this.state.currentMovieIndex]) ? [] : this.state.filteredMovieList[this.state.currentMovieIndex].original_title;\r\n    let currentMovieOverview = (!this.state.filteredMovieList[this.state.currentMovieIndex]) ? [] : this.state.filteredMovieList[this.state.currentMovieIndex].overview;\r\n    let currentMoviePoster = (!this.state.filteredMovieList[this.state.currentMovieIndex]) ? [] : this.state.filteredMovieList[this.state.currentMovieIndex].poster_path;\r\n\r\n    return (\r\n        <div className=\"roulette_content\">\r\n            <h1>Movie Roulette</h1>\r\n            <div className=\"roulette\">\r\n                <div className=\"roulette-pic\">\r\n                    <img src={'https://image.tmdb.org/t/p/w300/'+currentMoviePoster} alt=\"image\" />\r\n                </div>\r\n                <div className=\"roulette-desc\">\r\n                    <p><em><b>{currentMovieTitle}</b></em></p>\r\n                    <p>{currentMovieOverview}</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"thumbs\">\r\n                    <div className=\"thumbs-up\">\r\n                        <button className=\"roulette_button\" onClick={this.thumbsUp}><FontAwesomeIcon icon={farHeart} size='3x'/></button>\r\n                    </div>\r\n                    <div className=\"thumbs-down\">\r\n                        <button className=\"roulette_button\" onClick={this.thumbsDown}><FontAwesomeIcon icon={faTimes} size='3x'/></button>\r\n                    </div>\r\n            </div> \r\n        </div>\r\n    )\r\n\r\n}\r\n}\r\n\r\nexport default MovieRoulette;","C:\\Users\\farah\\Documents\\Visual_Studio_projects\\Movie Roulette\\movie-roulette-app\\src\\Components\\Signup-Component\\signupForm.js",["130"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Logo from '../Login-Component/logo';\r\nimport AuthApiService from '../../Services/Auth-api-service'\r\nimport './signupForm.css';\r\n// import '../Components/FooterComponent/Login-Component/loginComponent.css'\r\n\r\nclass signupForm extends React.Component {\r\n    state = {\r\n      error: null\r\n    }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { full_name, email, password } = e.target\r\n\r\n    AuthApiService.postUser({\r\n      full_name: full_name.value,\r\n      email: email.value,\r\n      password: password.value,\r\n    })\r\n      .then(user => {\r\n        full_name.value = ''\r\n        email.value = ''\r\n        password.value = ''\r\n        this.props.registrationSuccess();\r\n      })\r\n      .catch(res => {\r\n        this.setState({\r\n          error: res.error\r\n        })\r\n      })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"signup_page\">\r\n        {/* <Logo /> */}\r\n        <div className=\"signup_form\">\r\n          <h1>Sign up</h1>\r\n          <form onSubmit={this.handleSubmit} className=\"registration-form\">\r\n            <ul className=\"form_wrapper\">\r\n              <li className=\"form_row\">\r\n                <input type=\"text\" name=\"full_name\" id=\"full_name\" placeholder=\"Full Name\" />\r\n              </li>\r\n              <li className=\"form_row\">\r\n                <input type=\"text\" name=\"email\" id=\"email\" placeholder=\"email\" />\r\n              </li>\r\n              <li className=\"form_row\">\r\n                <input type=\"password\" name=\"password\" id=\"password\" placeholder=\"password\" />\r\n              </li>\r\n              <li className=\"form_row\">\r\n                <button type='submit' className=\"sign-up-button btn\">Sign Up!</button>\r\n              </li> \r\n            </ul>\r\n            \r\n              <Link to=\"/login\" className=\"login_link\">Already have an account? Click here to login.</Link>\r\n          </form>\r\n\r\n            \r\n        </div>\r\n\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default signupForm;","C:\\Users\\farah\\Documents\\Visual_Studio_projects\\Movie Roulette\\movie-roulette-app\\src\\Services\\Movie-Service.js",["131"],"import TokenService from './Token-service'\r\nimport config from '../config'\r\n\r\nconst movieService = {\r\n    getAllMovies(page) {\r\n        return fetch(`https://api.themoviedb.org/3/discover/movie?api_key=2bb6427016a1701f4d730bde6d366c84&page=${page}`)\r\n            .then(res => \r\n                (!res.ok)\r\n                    ? res.json().then(e => Promise.reject(e))\r\n                    : res.json())\r\n    },\r\n    getMovieGenres() {\r\n        return fetch(`https://api.themoviedb.org/3/genre/movie/list?api_key=2bb6427016a1701f4d730bde6d366c84&language=en-US`)\r\n        .then(res => \r\n            (!res.ok)\r\n                ? res.json().then(e => Promise.reject(e))\r\n                : res.json())\r\n    },\r\n\r\n    getMyMovies()  {\r\n        return fetch(`http://localhost:8000/myMovies`, {\r\n            headers: {\r\n                'authorization': `bearer ${TokenService.getAuthToken()}`,   \r\n            },\r\n        })\r\n            .then(res => \r\n                (!res.ok) ? res.json().then(e => Promise.reject(e)) : res.json())\r\n    },\r\n\r\n    postMovie(id, title, poster, overview, genre_id, release_date, disliked, user_id) {\r\n        return fetch(`http://localhost:8000/myMovies`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'content-type':'application/json',\r\n                'authorization': `bearer ${TokenService.getAuthToken()}`,   \r\n            },\r\n            body: JSON.stringify(id, title, poster, overview, genre_id, release_date, disliked, user_id),\r\n        })\r\n            .then(res => {\r\n                (!res.ok) ? res.json().then(e => Promise.reject(e)) : res.json()\r\n            })\r\n    },\r\n    \r\n    updateMovieList(id, user_id, watched) {\r\n        return fetch(`http://localhost:8000/myMovies/${id}/${user_id}`, {\r\n            method: 'PATCH',\r\n            headers: {\r\n                'content-type':'application/json',\r\n                'authorization': `bearer ${TokenService.getAuthToken()}`,   \r\n            },\r\n            body: JSON.stringify(watched),\r\n        })\r\n        .then(res => {\r\n            (!res.ok) ? res.json().then(e => Promise.reject(e)) : res.json()\r\n        })\r\n    }\r\n}\r\n\r\nexport default movieService;","C:\\Users\\farah\\Documents\\Visual_Studio_projects\\Movie Roulette\\movie-roulette-app\\src\\Components\\ProfileComponent\\movieProfile.js",[],"C:\\Users\\farah\\Documents\\Visual_Studio_projects\\Movie Roulette\\movie-roulette-app\\src\\Components\\ProfileComponent\\yourMovies.js",["132","133","134"],"import React from 'react'\r\nimport MovieProfileNav from './movieProfileNav';\r\nimport MovieService from '../../Services/Movie-Service'\r\nimport ProfileService from '../../Services/Profile-Service'\r\nimport './profile.css'\r\n\r\nclass YourMovies extends React.Component {\r\nstate = {\r\nyourMovies: [],\r\ncurrentProfileInfo: [],\r\nwatchedMovies: 0,\r\n}\r\n\r\ncomponentDidMount() {\r\nProfileService.getCurrentUserProfile()\r\n    .then(profile => {\r\n        if(profile.length == 0) {\r\n            const newUserProfileInfo = {\r\n                'profile_picture': 'profile pic here',\r\n                'genre_like': 'none',\r\n                'actor': 'none'\r\n            }\r\n            ProfileService.insertUserProfile(newUserProfileInfo)\r\n        }\r\n\r\n        this.setState({\r\n            currentProfileInfo: profile\r\n        })\r\n    })\r\n\r\nMovieService.getMyMovies()\r\n    .then(movie => {\r\n        this.setState({\r\n            watchedMovies: movie.filter(val => val.watched).length,\r\n            yourMovies: movie.filter(val => (!val.watched) && (!val.disliked))\r\n        })\r\n    })\r\n}\r\n\r\nrenderProfileInfo() {\r\nif(this.state.yourMovies.length !== 0) {\r\n    return (\r\n        this.state.yourMovies.map((movie, i) => {\r\n            return ( \r\n                <div className=\"movie_list\">\r\n                <ul>   \r\n                <li key={movie.id}>\r\n                        <img src={'https://image.tmdb.org/t/p/w300/'+movie.poster} alt=\"image\" />\r\n                        <p><b>{movie.title}</b></p>\r\n                        <p>{movie.overview}</p>\r\n                        \r\n                        </li>  \r\n                    </ul> \r\n                    <div className=\"movie_list_button\">\r\n                        <button onClick={() => this.handleWatched(movie.id, movie.user_id)}>I've watched this</button>\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n    )\r\n} \r\nelse {\r\n    return (\r\n        <h3>No movies here :(</h3>\r\n    )\r\n}\r\n}\r\n\r\nhandleWatched(id, user_id) {\r\nMovieService.updateMovieList(id, user_id, {\r\n    watched: true,\r\n})\r\n.then(\r\n    this.setState({\r\n        yourMovies: this.state.yourMovies.filter(movie => movie.id != id)\r\n    })\r\n)\r\n\r\n}\r\n\r\nrender() {\r\nconst path = this.props.location\r\n\r\nreturn( \r\n    <div className=\"your_movies\">\r\n        <div className=\"movie_nav\">\r\n            <MovieProfileNav path={path} watchedNum={this.state.watchedMovies}/>\r\n        </div>\r\n        <div className=\"movie_group\">\r\n            {this.renderProfileInfo()}   \r\n        </div>\r\n        \r\n        \r\n    </div>\r\n)\r\n}\r\n\r\n}\r\n\r\nexport default YourMovies;","C:\\Users\\farah\\Documents\\Visual_Studio_projects\\Movie Roulette\\movie-roulette-app\\src\\Components\\Login-Component\\loginForm.js",["135"],"import React from 'react';\r\nimport Logo from './logo';\r\nimport TokenService from '../../Services/Token-service'\r\nimport AuthApiService from '../../Services/Auth-api-service'\r\nimport { Link } from 'react-router-dom';\r\nimport './loginComponent.css';\r\n\r\nclass loginForm extends React.Component {\r\n    state = {\r\n        error: null\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        const { full_name, password } = e.target;\r\n        this.setState({ errore: null })\r\n\r\n        AuthApiService.postLogin({\r\n            full_name: full_name.value,\r\n            password: password.value,\r\n        })\r\n        .then(res => {\r\n            full_name.value = ''\r\n            password.value = ''\r\n            TokenService.saveAuthToken(res.authToken)\r\n            this.props.loginSuccess();\r\n        }) \r\n        .catch(res => {\r\n            this.setState({ error: res.error })\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"login_page\">\r\n                {/* <Logo/> */}\r\n                <div className=\"login_form\">\r\n                    <h1>Login</h1>\r\n                    <form className=\"loginForm\" onSubmit={this.handleSubmit}>\r\n                        <ul className=\"form_wrapper\">\r\n                            <li className=\"form_row\">\r\n                                <input type=\"text\" name=\"full_name\" id=\"full_name\" placeholder=\"full_name\"/>\r\n                            </li>\r\n                            <li className=\"form_row\">\r\n                                <input type=\"password\" name=\"password\" id=\"password\"   placeholder=\"password\"/>\r\n                            </li>\r\n                            <li className=\"form_row\">\r\n                                <button type='submit' className=\"sign-up-button btn\">Login</button>\r\n                            </li>\r\n                        </ul>\r\n                        <Link to=\"/signup\" className=\"signup_link\">Don't have an account? Sign up!</Link>\r\n                    </form>\r\n\r\n            \r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n    } \r\n}\r\n\r\nexport default loginForm;","C:\\Users\\farah\\Documents\\Visual_Studio_projects\\Movie Roulette\\movie-roulette-app\\src\\Components\\MovieQuiz-Component\\moviePreference.js",[],"C:\\Users\\farah\\Documents\\Visual_Studio_projects\\Movie Roulette\\movie-roulette-app\\src\\Components\\FooterComponent\\footer.js",["136","137"],"import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport TokenService from '../../Services/Token-service'\r\nimport Logout from '../LogoutComponent/LogoutComponent'\r\nimport './footer.css';\r\n\r\nexport default function Footer(props) {\r\n    function renderFooter() {\r\n        return (\r\n            <div className='footer'>\r\n            <Link to='/movie-roulette' style={props.path =='/movie-roulette' ? {fontWeight:\"bold\"} : {color:\"normal\"}}>Roulette</Link>\r\n            <Link to=\"/your-movies\" style={props.path =='/your-movies' ? {fontWeight:\"bold\"} : {color:\"normal\"}}>Your Movies</Link>\r\n            <Logout />\r\n        </div>\r\n        )\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            {TokenService.getAuthToken() \r\n                ? renderFooter()\r\n                : \" \"\r\n            }\r\n        </div>\r\n    )\r\n}","C:\\Users\\farah\\Documents\\Visual_Studio_projects\\Movie Roulette\\movie-roulette-app\\src\\Components\\ProfileComponent\\movieProfileNav.js",["138","139","140"],"import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n// import './profile.css'\r\n\r\n\r\nclass MovieProfileNav extends React.Component {\r\n    render() {\r\n        return(\r\n            <div className=\"nav\">\r\n                <h1>Your Movies</h1>\r\n\r\n                <div className=\"nav-bar\">\r\n                    <Link to=\"/your-movies\" style={this.props.path.pathname=='/your-movies' ? {fontWeight:\"bold\"} : {color:\"normal\"}}>Your Movies</Link>\r\n                    <Link to=\"/watch-again\" style={this.props.path.pathname=='/watch-again' ? {fontWeight:\"bold\"} : {color:\"normal\"}}>Watch Again</Link>\r\n                    {/* <Link to=\"/movie-profile\" style={this.props.path.pathname=='/movie-profile' ? {fontWeight:\"bold\"} : {color:\"normal\"}}>Movie Profile</Link> */}\r\n                    <Link\r\n                        to={{\r\n                            pathname: '/movie-profile',\r\n                            state: { watchedNum: this.props.watchedNum}\r\n                        }}\r\n                        style={this.props.path.pathname=='/movie-profile' ? {fontWeight:\"bold\"} : {color:\"normal\"}}\r\n                    >Movie Profile</Link>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default MovieProfileNav;","C:\\Users\\farah\\Documents\\Visual_Studio_projects\\Movie Roulette\\movie-roulette-app\\src\\Components\\Login-Component\\logo.js",[],"C:\\Users\\farah\\Documents\\Visual_Studio_projects\\Movie Roulette\\movie-roulette-app\\src\\Services\\Auth-api-service.js",[],["141","142"],"C:\\Users\\farah\\Documents\\Visual_Studio_projects\\Movie Roulette\\movie-roulette-app\\src\\Routes\\RegistrationRoute\\registration.js",[],"C:\\Users\\farah\\Documents\\Visual_Studio_projects\\Movie Roulette\\movie-roulette-app\\src\\Contexts\\UserContext.js",[],"C:\\Users\\farah\\Documents\\Visual_Studio_projects\\Movie Roulette\\movie-roulette-app\\src\\Services\\Token-service.js",[],"C:\\Users\\farah\\Documents\\Visual_Studio_projects\\Movie Roulette\\movie-roulette-app\\src\\config.js",["143"],"export default {\r\n    TOKEN_KEY: 'redezvous-client-auth-token',\r\n    API_KEY: process.env.REACT_APP_API_KEY,\r\n}","C:\\Users\\farah\\Documents\\Visual_Studio_projects\\Movie Roulette\\movie-roulette-app\\src\\Routes\\PrivateRoute\\Private-route.js",[],"C:\\Users\\farah\\Documents\\Visual_Studio_projects\\Movie Roulette\\movie-roulette-app\\src\\Services\\Profile-Service.js",[],"C:\\Users\\farah\\Documents\\Visual_Studio_projects\\Movie Roulette\\movie-roulette-app\\src\\Components\\MovieSurvey-Component\\movieSurvey.js",["144"],"import React from 'react'\r\nimport MovieService from '../../Services/Movie-Service'\r\nimport ProfileService from '../../Services/Profile-Service'\r\nimport './movieSurvey.css'\r\n\r\nexport default class MovieSurvey extends React.Component {\r\n    state = {\r\n        profileId: '',\r\n        allGenres: [],\r\n        questionNum: 1,\r\n        questionIndex: 0,\r\n        questions: [\r\n            'What genres?'\r\n        ],\r\n        selectedGenres: [],\r\n    }\r\n\r\n    componentDidMount() {\r\n        MovieService.getMovieGenres()\r\n            .then(results => {\r\n                this.setState({\r\n                    allGenres: results.genres\r\n                })\r\n            })  \r\n            \r\n        ProfileService.getCurrentUserProfile()\r\n            .then(profile => {\r\n                if(profile[0].genre_like !== 'none') {\r\n                    this.setState({\r\n                        selectedGenres: JSON.parse(profile[0].genre_like)\r\n                    })\r\n                }\r\n                this.setState({\r\n                    profileId: profile[0].user_id,\r\n                })\r\n            })\r\n    }\r\n\r\n    selectCheckbox = (e) => {\r\n        const genres = this.state.selectedGenres\r\n        let index\r\n        if(e.target.checked) {\r\n            genres.push({\"name\": e.target.name, \"value\":+e.target.value})\r\n        } else {\r\n            index = genres.findIndex(i => i.value === +e.target.value)\r\n            genres.splice(index, 1)\r\n        }\r\n\r\n        this.setState({\r\n            selectedGenres: genres\r\n        })\r\n    }\r\n\r\n    renderGenreQuestion() { \r\n        // const genre_style = {\r\n        //     background: 'linear-gradient(#4B4A4A 0%, #333 74%)',\r\n        //     color: '#ee9617',\r\n        // }\r\n        const val = this.state.selectedGenres.map(genre => genre).sort(function(a,b) {return a-b})\r\n        const genres = this.state.allGenres.map(genre => genre).sort(function(a,b) {return a-b})\r\n\r\n        let matchFound;\r\n        let matches = [];\r\n        for(let i=0; i< val.length; i++) {\r\n            matchFound = false;\r\n            for(let y=0; y < genres.length; y++) {\r\n                if(val[i].value == genres[y].id) {\r\n                    matchFound = true;\r\n                    break;\r\n                } \r\n            }\r\n\r\n            if(matchFound) {\r\n                matches.push(val[i].value);\r\n            }\r\n        }\r\n\r\n        return this.state.allGenres.map((val, id) =>   \r\n                <label key={id} \r\n                style={{background: matches.includes(val.id) ? 'linear-gradient(#4B4A4A 0%, #333 74%)' : 'none', color: matches.includes(val.id) ? '#ee9617' : 'black'}}\r\n                >\r\n                    {val.name}\r\n                <input\r\n                        onClick={this.selectCheckbox}\r\n                        type=\"checkbox\"\r\n                        value={val.id}\r\n                        name={val.name}\r\n                        checked={matches.includes(val.id)}\r\n                    /><br></br>\r\n                </label>   \r\n        )\r\n    }\r\n\r\n    renderAnswers = () => {\r\n        if(this.state.questionIndex === 0) {\r\n            return this.renderGenreQuestion();\r\n        }\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const userID = this.state.profileId;\r\n        const genres = JSON.stringify(this.state.selectedGenres)\r\n        ProfileService.updateUserProfile(userID, {\r\n            genre_like: genres\r\n        })\r\n            .then(\r\n                this.props.submitSuccess()\r\n            )\r\n    }\r\n    \r\n    render() {\r\n        return(\r\n            <div className='survey'>\r\n                <h1>Select the Genres your prefer:</h1>\r\n                <form className=\"survey_form\" onSubmit={this.handleSubmit} >\r\n                    \r\n                    {this.renderAnswers()}\r\n                    <div className=\"button_holder\">\r\n                        <button type='submit'>Submit</button>\r\n                    </div>\r\n                    \r\n                </form>\r\n            </div>            \r\n        )\r\n    }\r\n}\r\n","C:\\Users\\farah\\Documents\\Visual_Studio_projects\\Movie Roulette\\movie-roulette-app\\src\\Routes\\MovieSurveyRoute\\movieSurveyRoute.js",[],"C:\\Users\\farah\\Documents\\Visual_Studio_projects\\Movie Roulette\\movie-roulette-app\\src\\Routes\\PublicRoute\\LandingPageRoute\\landingPageRoute.js",[],"C:\\Users\\farah\\Documents\\Visual_Studio_projects\\Movie Roulette\\movie-roulette-app\\src\\Routes\\PublicRoute\\LoginRoute\\loginRoute.js",[],"C:\\Users\\farah\\Documents\\Visual_Studio_projects\\Movie Roulette\\movie-roulette-app\\src\\Components\\ProfileComponent\\watchAgain.js",["145","146"],"import React from 'react'\r\nimport MovieProfileNav from './movieProfileNav';\r\nimport MovieService from '../../Services/Movie-Service'\r\n\r\nclass WatchAgain extends React.Component {\r\n    state = {\r\n        myWatchedMovies: []\r\n    }\r\n\r\ncomponentDidMount() {\r\n    MovieService.getMyMovies()\r\n        .then(movie => {\r\n            this.setState({\r\n                myWatchedMovies: movie.filter(val => (val.watched) && (!val.disliked))\r\n            })\r\n        })\r\n}\r\n\r\nrenderWatchedMovies() {\r\n    if(this.state.myWatchedMovies.length != 0) {\r\n        return this.state.myWatchedMovies.map(movie => {\r\n            return (\r\n                <div className=\"watched_movies_list\">\r\n                    <li key={movie.id}>\r\n                        <ul>\r\n                            <img src={'https://image.tmdb.org/t/p/w300/'+movie.poster} alt=\"image\" />\r\n                            <p><b>{movie.title}</b></p>\r\n                            <p>{movie.overview}</p>\r\n                        </ul>\r\n                    </li>\r\n                </div>\r\n            )\r\n        })\r\n    } else {\r\n        return (\r\n            <h3>You haven't watched anything yet.</h3>\r\n        )\r\n    }\r\n}\r\n\r\nrender() {\r\n    return (\r\n        <div className=\"watched_movies\">\r\n            <div className=\"movie_nav\">\r\n                <MovieProfileNav path={this.props.location} watchedNum={this.state.myWatchedMovies.length}/>\r\n            </div>\r\n            <div className=\"watch_again_group\">\r\n                {this.renderWatchedMovies()}\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n}\r\n\r\nexport default WatchAgain;","C:\\Users\\farah\\Documents\\Visual_Studio_projects\\Movie Roulette\\movie-roulette-app\\src\\Components\\LogoutComponent\\LogoutComponent.js",[],{"ruleId":"147","severity":1,"message":"148","line":4,"column":8,"nodeType":"149","messageId":"150","endLine":4,"endColumn":19},{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","replacedBy":"154"},{"ruleId":"147","severity":1,"message":"155","line":1,"column":16,"nodeType":"149","messageId":"150","endLine":1,"endColumn":25},{"ruleId":"147","severity":1,"message":"156","line":3,"column":8,"nodeType":"149","messageId":"150","endLine":3,"endColumn":14},{"ruleId":"147","severity":1,"message":"157","line":11,"column":8,"nodeType":"149","messageId":"150","endLine":11,"endColumn":22},{"ruleId":"147","severity":1,"message":"158","line":13,"column":8,"nodeType":"149","messageId":"150","endLine":13,"endColumn":20},{"ruleId":"159","severity":1,"message":"160","line":26,"column":17,"nodeType":"161","messageId":"162","endLine":26,"endColumn":19},{"ruleId":"147","severity":1,"message":"163","line":27,"column":5,"nodeType":"149","messageId":"150","endLine":27,"endColumn":19},{"ruleId":"147","severity":1,"message":"164","line":6,"column":8,"nodeType":"149","messageId":"150","endLine":6,"endColumn":16},{"ruleId":"147","severity":1,"message":"165","line":7,"column":9,"nodeType":"149","messageId":"150","endLine":7,"endColumn":22},{"ruleId":"159","severity":1,"message":"166","line":32,"column":27,"nodeType":"161","messageId":"162","endLine":32,"endColumn":29},{"ruleId":"167","severity":1,"message":"168","line":50,"column":24,"nodeType":"169","messageId":"170","endLine":50,"endColumn":26},{"ruleId":"171","severity":1,"message":"172","line":159,"column":21,"nodeType":"173","endLine":159,"endColumn":100},{"ruleId":"147","severity":1,"message":"174","line":3,"column":8,"nodeType":"149","messageId":"150","endLine":3,"endColumn":12},{"ruleId":"147","severity":1,"message":"175","line":2,"column":8,"nodeType":"149","messageId":"150","endLine":2,"endColumn":14},{"ruleId":"159","severity":1,"message":"166","line":17,"column":27,"nodeType":"161","messageId":"162","endLine":17,"endColumn":29},{"ruleId":"171","severity":1,"message":"172","line":48,"column":25,"nodeType":"173","endLine":48,"endColumn":98},{"ruleId":"159","severity":1,"message":"160","line":75,"column":68,"nodeType":"161","messageId":"162","endLine":75,"endColumn":70},{"ruleId":"147","severity":1,"message":"174","line":2,"column":8,"nodeType":"149","messageId":"150","endLine":2,"endColumn":12},{"ruleId":"159","severity":1,"message":"166","line":11,"column":58,"nodeType":"161","messageId":"162","endLine":11,"endColumn":60},{"ruleId":"159","severity":1,"message":"166","line":12,"column":55,"nodeType":"161","messageId":"162","endLine":12,"endColumn":57},{"ruleId":"159","severity":1,"message":"166","line":13,"column":76,"nodeType":"161","messageId":"162","endLine":13,"endColumn":78},{"ruleId":"159","severity":1,"message":"166","line":14,"column":76,"nodeType":"161","messageId":"162","endLine":14,"endColumn":78},{"ruleId":"159","severity":1,"message":"166","line":21,"column":56,"nodeType":"161","messageId":"162","endLine":21,"endColumn":58},{"ruleId":"151","replacedBy":"176"},{"ruleId":"153","replacedBy":"177"},{"ruleId":"178","severity":1,"message":"179","line":1,"column":1,"nodeType":"180","endLine":4,"endColumn":2},{"ruleId":"159","severity":1,"message":"166","line":67,"column":33,"nodeType":"161","messageId":"162","endLine":67,"endColumn":35},{"ruleId":"159","severity":1,"message":"160","line":20,"column":42,"nodeType":"161","messageId":"162","endLine":20,"endColumn":44},{"ruleId":"171","severity":1,"message":"172","line":26,"column":29,"nodeType":"173","endLine":26,"endColumn":102},"no-unused-vars","'UserContext' is defined but never used.","Identifier","unusedVar","no-native-reassign",["181"],"no-negated-in-lhs",["182"],"'Component' is defined but never used.","'Logout' is defined but never used.","'ProfileService' is defined but never used.","'MovieService' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'loginComponent' is assigned a value but never used.","'ThumbsUp' is defined but never used.","'AiOutlineLike' is defined but never used.","Expected '===' and instead saw '=='.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'Logo' is defined but never used.","'config' is defined but never used.",["181"],["182"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]